/* Core */
import { createSlice, type PayloadAction } from '@reduxjs/toolkit'

/* Instruments */
import { getJourneysAsync } from './thunks'

const initialState: JourneyState = {
  journeys: [],
  status: 'idle',
}

export const journeySlice = createSlice({
  name: 'journeys',
  initialState,
  // The `reducers` field lets us define reducers and generate associated actions
  reducers: {

  },
  // The `extraReducers` field lets the slice handle actions defined elsewhere,
  // including actions generated by createAsyncThunk or in other slices.
  extraReducers: (builder) => {
    builder
      .addCase(getJourneysAsync.pending, (state) => {
        state.status = 'loading'
      })
      .addCase(getJourneysAsync.fulfilled, (state, action) => {
        state.status = 'idle'
        state.journeys = action.payload
      })
  },
})

/* Types */
export interface JourneyState {
  journeys: Interfaces.Journey[];
  status: string;
}
